---
title: "Practice Raster Manipuations"
author: "Jaslyn Miura"
format: html
---

```{r}
# loading in necessary libraries
library(tidyverse)
library(spData)
library(spDataLarge)
library(sf)
library(stars)
library(terra)

```

```{r}
# loading in the data
dem <- terra::rast(system.file("raster/dem.tif", package = "spDataLarge"))
landsat <- terra::rast(system.file("raster/landsat.tif", package = "spDataLarge"))
srtm <- terra::rast(system.file("raster/srtm.tif", package = "spDataLarge"))
```



```{r}

terra::hist(dem)

```
```{r}

terra::boxplot(dem)
```

```{r}

rcl <- matrix(c(0, 300, 1, # group 1 ranges from 1000 - 1500 m
                300, 500, 2, # group 2 ranges from 1500 - 2000 m
                500, Inf, 3), # group 3 ranges from 2000 - 2500 m
              ncol = 3, byrow = TRUE)

dem_rcl <- classify(dem, rcl = rcl)

# assign labels to the numerical categories
levels(dem_rcl) <- tibble::tibble(id = 1:3,
                                       cats = c("low", "medium", "high"))


# calculate the mean elevation for each category using original DEM values.
elevation_mean <- zonal(dem, dem_rcl, fun = "mean")
elevation_mean
```

### Correcting the scale across all grid cells
Bringing the data back to the original scale?
```{r}

scale_factor <- 0.0001
offset <- 0

scale_fun <- function(x) {
  x * scale_factor + offset
}

landsat_scaled <- terra::app(landsat, fun = scale_fun)

```


```{r}

ndvi_fun <- function(nir, red){
(nir-red)/(nir+red)
}

ndwi_fun <- function(nir, green) {
  (green-nir)/(green+nir)
}

# applying the nir layer (4) and the red layer (3) to our ndvi_fun function
ndvi_zion <- lapp(landsat_scaled[[c(4,3)]], fun = 'ndvi_fun')

# applying the nir layer (4) and the green layer (2) to our ndwi_fun function 
ndwi_zion <- lapp(landsat_scaled[[c(4,2)]], fun = 'ndwi_fun')


```

```{r}

plot(ndwi_zion,
     main = "Zion National Park NDWI")

```

```{r}

plot(ndvi_zion,
     main = "Zion National Park NDVI")

```

